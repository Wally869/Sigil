// This file was generated by Sigil. Do not edit manually.

/// A simple greeting prompt
#[derive(Debug, Clone)]
pub struct Greeting {
    pub name: String,
    pub place: Option<String>,
}

impl Greeting {
    pub fn builder() -> GreetingBuilder {
        GreetingBuilder::default()
    }
}

#[derive(Default)]
pub struct GreetingBuilder {
    name: Option<String>,
    place: Option<String>,
}

impl GreetingBuilder {
    pub fn name(mut self, value: impl Into<String>) -> Self {
        self.name = Some(value.into());
        self
    }

    pub fn place(mut self, value: impl Into<String>) -> Self {
        self.place = Some(value.into());
        self
    }

    pub fn build(self) -> Result<Greeting, &'static str> {
        Ok(Greeting {
            name: self.name.ok_or("name is required")?,
            place: self.place.or(Some("Earth".to_string())),
        })
    }
}

impl Greeting {
    pub fn render_xml(&self) -> String {
        let mut output = String::new();
        output.push_str("<greeting>");
        output.push_str("Hello, ");
        output.push_str(&self.name);
        output.push_str("! Welcome to ");
        output.push_str(self.place.as_deref().unwrap_or("Earth"));
        output.push_str(".");
        output.push_str("</greeting>\n\n");
        output.trim_end().to_string()
    }

    pub fn render_markdown(&self) -> String {
        let mut output = String::new();
        output.push_str("# Greeting\n\n");
        output.push_str("Hello, ");
        output.push_str(&self.name);
        output.push_str("! Welcome to ");
        output.push_str(self.place.as_deref().unwrap_or("Earth"));
        output.push_str(".");
        if !output.ends_with('\n') {
            output.push_str("\n");
        }
        output.push_str("\n");
        output.trim_end().to_string()
    }

    pub fn render_plain(&self) -> String {
        let mut output = String::new();
        output.push_str("GREETING:\n");
        output.push_str("Hello, ");
        output.push_str(&self.name);
        output.push_str("! Welcome to ");
        output.push_str(self.place.as_deref().unwrap_or("Earth"));
        output.push_str(".");
        if !output.ends_with('\n') {
            output.push_str("\n");
        }
        output.push_str("\n");
        output.trim_end().to_string()
    }
}

